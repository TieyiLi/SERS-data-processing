"""
===============================================================
Export original (.wdf) spectra collection files to (.txt) files
===============================================================

This file contains the function which is designed for exporting original .wdf 
spectral files generated by ReniShaw Raman spectroscopy to .txt files.         

"""

import numpy as np
import os, shutil, re
from renishawWiRE import WDFReader


def export_wdf(source_folder_path, export_folder_path):
    """
    This function converts batches of (.wdf) files generated by ReniShaw
    Raman spectroscopy to (.txt) files.

    Requirements
    ----------
    The to-be-exported data folder whose path is 'source_folder_path'
    must have sub-folders in the structure of 'sample folders\fine mappings.wdf'.
    It doesn`t matter if coarse mappings.wdf are included under the samples
    folders.
    File name of coarse mapping must start with 'mapping_1(or 2, 3, ...)_...' or
    'map_1(or 2, 3, ...)_, space must be replaced by underline '_' to prevent
    running error.
    File name of fine mapping must start with 'mapping_1@1(or 2, 3, ...)_...' or
    'map_1@1(or 2, 3, ...)_, space must be replaced by underline '_' to prevent
    running error, 'at' symbol '@' must exist to identify fine mapping versus
    coarse mapping.
    Fine mapping shape must be square such as 5x5, 7x7, ...
    Parameters
    ----------
    source_folder_path: path of the to-be-exported (.wdf) files folder
    export_folder_path: path of a blank folder to which the exported files will
                        be saved to

    Returns
    -------
    None
    """

    # Using underline '_' to split file name in order to identify fine map
    pattern = re.compile('_')

    # Enter the to-be-exported folder and export (.txt) files to
    # the target folder
    for sample_folder_name in os.listdir(source_folder_path):
        sample_folder_path = os.path.join(source_folder_path, sample_folder_name)
        export_sample_folder_path = os.path.join(export_folder_path, sample_folder_name)
        if not os.path.exists(export_sample_folder_path):
            os.makedirs(export_sample_folder_path)

        # Iterate (.wdf) files
        for map_name in os.listdir(sample_folder_path):
            # Identify fine mapping files
            if '@' in map_name:
                split = pattern.split(map_name)
                # Get the fine mapping name as ID
                map_id = split[1]
                wdf_path = os.path.join(sample_folder_path, map_name)

                # Read (.wdf) file using WDFReader module
                wdf_reader = WDFReader(wdf_path)
                wavenumber = wdf_reader.xdata
                collection = wdf_reader.spectra

                # Get the coordinate range of the fine mapping
                x_pos = wdf_reader.xpos
                y_pos = wdf_reader.ypos

                # print(collection.ndim)

                # Create a new directory under the target folder for
                # saving the corresponding (.txt) files
                map_dir = os.path.join(export_sample_folder_path, 'map' + map_id)
                if not os.path.exists(map_dir):
                    os.makedirs(map_dir)

                # Processing exclusively square fine mapping
                if collection.ndim == 3:
                    start = 0
                    for i in range(collection.shape[0]):
                        for j in range(collection.shape[1]):

                            # Get the position as part of the (.txt) file name
                            spec_name = map_name + '_X_' + str(x_pos[start]) + '_Y_' + str(y_pos[start]) + '.txt'
                            spec_path = os.path.join(map_dir, spec_name)

                            # Save the spectrum with a numpy array with the shape of
                            # (Raman shift #, 2)
                            spectrum = np.empty(shape=(wavenumber.shape[0], 2))
                            spectrum[:, 0], spectrum[:, 1] = wavenumber, collection[i][j]

                            np.savetxt(fname=spec_path, X=spectrum, fmt='%.6f')
                            start += 1

                # Print the (.wdf) file path which is not square fine mapping thus are not been processed
                else:
                    print(wdf_path)

"""
Example of usage:
>>> source_dir_path = 'E:\Raman data\WDF data\12_21_20_ColonExosome'
>>> export_dir_path = 'E:\Raman data\TXT data\12_21_20_ColonExosome'
>>> export_wdf(source_folder_path=source_dir_path, export_folder_path=export_dir_path)
"""
